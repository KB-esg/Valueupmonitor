name: MSIT Telco Service Monitoring

on:
  schedule:
    - cron: '40 23 1-31/2 * *'  # UTC 23:40 (KST 08:40) 홀수날마다 실행
  workflow_dispatch:
    inputs:
      start_date:
        description: '검토 시작 날짜 (YYYY-MM-DD 형식)'
        required: false
        type: string
      end_date:
        description: '검토 종료 날짜 (YYYY-MM-DD 형식)'
        required: false
        type: string
      start_page:
        description: '시작 페이지 번호'
        required: false
        default: '1'
        type: string
      end_page:
        description: '종료 페이지 번호'
        required: false
        default: '5'
        type: string
      days_range:
        description: '몇 일 전까지의 게시물을 확인할지 설정 (날짜 범위 미지정 시 사용)'
        required: false
        default: '4'
        type: string
      check_sheets:
        description: 'Google Sheets 업데이트 여부'
        required: false
        default: 'true'
        type: boolean
      spreadsheet_name:
        description: 'Google Sheets 스프레드시트 이름'
        required: false
        default: 'MSIT 통신 통계'
        type: string
      ocr_enabled:
        description: 'OCR 기능 활성화 여부'
        required: false
        default: 'true'
        type: boolean
      reverse_order:
        description: '역순 페이지 탐색 여부 (큰 페이지 번호부터)'
        required: false
        default: 'true'
        type: boolean
      cleanup_old_sheets:
        description: '날짜가 포함된 오래된 시트 정리 여부'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb

    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
        sudo apt-get install -y tesseract-ocr-kor  # 한국어 언어 팩 설치
        sudo apt-get install -y libtesseract-dev
        tesseract --version  # 설치된 Tesseract 버전 확인
        tesseract --list-langs  # 설치된 언어 패키지 확인

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Playwright 기반 dependencies 설치
        pip install playwright beautifulsoup4 python-telegram-bot requests pandas gspread oauth2client lxml html5lib pytesseract opencv-python pillow numpy

    - name: Install Playwright browsers
      run: |
        # Playwright 브라우저 설치 (중요!)
        playwright install chromium
        playwright install-deps

    - name: Create directories
      run: |
        mkdir -p downloads
        mkdir -p screenshots
        mkdir -p html_content

    - name: Run monitoring script
      env:
        TELCO_NEWS_TOKEN: ${{ secrets.TELCO_NEWS_TOKEN }}
        TELCO_NEWS_TESTER: ${{ secrets.TELCO_NEWS_TESTER }}
        MSIT_GSPREAD_ref: ${{ secrets.MSIT_GSPREAD_ref }}
        MSIT_SPREADSHEET_ID: ${{ secrets.MSIT_SPREADSHEET_ID }}
        # 날짜 범위 설정 관련 환경 변수
        START_DATE: ${{ github.event.inputs.start_date }}
        END_DATE: ${{ github.event.inputs.end_date }}
        START_PAGE: ${{ github.event.inputs.start_page || '1' }}
        END_PAGE: ${{ github.event.inputs.end_page || '5' }}
        DAYS_RANGE: ${{ github.event.inputs.days_range || '4' }}
        # 기타 설정 환경 변수
        CHECK_SHEETS: ${{ github.event.inputs.check_sheets || 'true' }}
        SPREADSHEET_NAME: ${{ github.event.inputs.spreadsheet_name || 'MSIT 통신 통계' }}
        OCR_ENABLED: ${{ github.event.inputs.ocr_enabled || 'true' }}
        REVERSE_ORDER: ${{ github.event.inputs.reverse_order || 'true' }}
        UPDATE_CONSOLIDATION: 'true'
        CLEANUP_OLD_SHEETS: ${{ github.event.inputs.cleanup_old_sheets || 'false' }}
        PYTHONIOENCODING: utf-8
      run: |
        # Xvfb 시작 (headless 환경을 위해)
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 2
        
        # 모니터링 스크립트 실행
        echo "모니터링 스크립트 실행..."
        python msit_monitor.py || { echo "모니터링 스크립트 실행 실패"; exit 1; }

    - name: Archive artifacts
      if: always()
      run: |
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        mkdir -p artifacts
        cp -r *.log *.png *.html downloads/* screenshots/* html_content/* *.bak artifacts/ 2>/dev/null || true
        echo "실행 정보:" > artifacts/run_info.txt
        echo "실행 ID: ${{ github.run_id }}" >> artifacts/run_info.txt
        echo "실행 번호: ${{ github.run_number }}" >> artifacts/run_info.txt
        echo "타임스탬프: ${TIMESTAMP}" >> artifacts/run_info.txt
        echo "실행자: ${{ github.actor }}" >> artifacts/run_info.txt
        echo "워크플로우: ${{ github.workflow }}" >> artifacts/run_info.txt
        echo "검토 기간: ${{ github.event.inputs.start_date || '지정 안됨' }} ~ ${{ github.event.inputs.end_date || '지정 안됨' }}" >> artifacts/run_info.txt
        echo "페이지 범위: ${{ github.event.inputs.start_page || '1' }} ~ ${{ github.event.inputs.end_page || '5' }}" >> artifacts/run_info.txt
        echo "Days Range: ${{ github.event.inputs.days_range || '4' }}" >> artifacts/run_info.txt
        echo "OCR 활성화: ${{ github.event.inputs.ocr_enabled || 'true' }}" >> artifacts/run_info.txt
        echo "역순 탐색: ${{ github.event.inputs.reverse_order || 'true' }}" >> artifacts/run_info.txt
        echo "시트 정리: ${{ github.event.inputs.cleanup_old_sheets || 'false' }}" >> artifacts/run_info.txt
        tar -czf monitoring-artifacts-${TIMESTAMP}.tar.gz artifacts/
        echo "ARTIFACT_PATH=monitoring-artifacts-${TIMESTAMP}.tar.gz" >> $GITHUB_ENV
        echo "ARTIFACT_NAME=monitoring-artifacts-${TIMESTAMP}" >> $GITHUB_ENV
        echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV

    - name: Create Release
      if: always()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: monitoring-${{ env.TIMESTAMP }}
        name: 모니터링 실행 ${{ github.run_number }} (${{ env.TIMESTAMP }})
        files: ${{ env.ARTIFACT_PATH }}
        body: |
          ## MSIT 통신 통계 모니터링 실행 결과
          - **실행 ID**: ${{ github.run_id }}
          - **실행 번호**: ${{ github.run_number }}
          - **실행 시간**: ${{ env.TIMESTAMP }}
          - **실행 유형**: ${{ github.event_name }}
          - **검토 기간**: ${{ github.event.inputs.start_date || '지정 안됨' }} ~ ${{ github.event.inputs.end_date || '지정 안됨' }}
          - **페이지 범위**: ${{ github.event.inputs.start_page || '1' }} ~ ${{ github.event.inputs.end_page || '5' }}
          - **역순 탐색**: ${{ github.event.inputs.reverse_order || 'true' }}
          - **OCR 활성화**: ${{ github.event.inputs.ocr_enabled || 'true' }}
          - **시트 정리**: ${{ github.event.inputs.cleanup_old_sheets || 'false' }}
          
          이 릴리스에는 모니터링 스크립트 실행 결과와 관련 로그 및 스크린샷이 포함되어 있습니다.
        token: ${{ secrets.GITHUB_TOKEN }}
