name: 01_ESG Fund Data Scraper

on:
  schedule:
    # 매주 목요일 오전 9시 (KST) = 수요일 오후 12시 (UTC)
    - cron: '0 0 * * 4'
  workflow_dispatch:  # 수동 실행도 가능하도록 설정

jobs:
  scrape-and-update:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements_esg.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
        playwright install-deps
    
    - name: Run ESG Fund Scraper
      env:
        MSIT_GSPREAD_REF: ${{ secrets.MSIT_GSPREAD_REF }}
        KRFUND_SPREADSHEET_ID: ${{ secrets.KRFUND_SPREADSHEET_ID }}
        TELCO_NEWS_TOKEN: ${{ secrets.TELCO_NEWS_TOKEN }}
        TELCO_NEWS_TESTER: ${{ secrets.TELCO_NEWS_TESTER }}
      run: |
        python scraper.py
    
    - name: Commit and push backup data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data_backup/
        git diff --staged --quiet || git commit -m "Update ESG fund data backup - $(date +'%Y-%m-%d')"
        git push
      continue-on-error: true  # 백업 실패해도 워크플로우는 성공으로 처리
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: esg-fund-data-${{ github.run_number }}
        path: data_backup/
        retention-days: 30  # 30일간 보관
    
    - name: Send notification on failure
      if: failure()
      env:
        TELCO_NEWS_TOKEN: ${{ secrets.TELCO_NEWS_TOKEN }}
        TELCO_NEWS_TESTER: ${{ secrets.TELCO_NEWS_TESTER }}
      run: |
        python -c "import requests, os; bot_token = os.environ.get('TELCO_NEWS_TOKEN'); chat_id = os.environ.get('TELCO_NEWS_TESTER'); requests.post(f'https://api.telegram.org/bot{bot_token}/sendMessage', data={'chat_id': chat_id, 'text': '❌ ESG Fund 데이터 수집 워크플로우 실패!'}) if bot_token and chat_id else None"
      continue-on-error: true
